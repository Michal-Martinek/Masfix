%macro test(name) {}

%define top_def 1
%namespace top_top {
	%define top_top_def 12
}
%namespace top_inner {
	%define top_inner_def 2
	%namespace deep {
		%define deep_def 3
		%namespace deeper {
			%define deeper_def 32

			%test(%top_def) ; OK
			%test(%top_inner_def) ; OK
			%test(%top_top_def) ; NO
			%*a
		}
	}
	%using top_top
	%using deep:deeper

	%test(%deep_def) ; NO
	%test(%deeper_def) ; OK
	%test(%top_top_def) ; OK
}
%namespace test_space {
	%define same_scope_def 4
	%namespace local_inner {
		%define local_inner_def 5
		%using top_top
	}

	%**scope_sep
	%namespace namespace_inline_test {
		%test(%top_inner_def) ; NO
		%using top_inner
		%test(%top_inner_def) ; OK
		%test(%top_top_def) ; NO
		%test(%top_top:top_top_def) ; OK
		%*a
		%test(%top_def) ; OK
		%test(%top_inner:top_def) ; NO
		%test(%deeper_def) ; NO
		%test(%deep:deeper:deeper_def) ; OK
		%*b
		%test(%deep_def) ; NO
		%test(%deep:deep_def) ; OK
		%test(%deep:top_inner:top_inner_def) ; NO
		%*c
		%test(%same_scope_def) ; OK
		%test(%local_inner) ; NO
		%test(%local_inner_def) ; NO
		%test(%local_inner:local_inner_def) ; OK
	}
	%macro scope_test() {
		%test(%top_inner_def) ; NEVER
		%test(%top_inner:top_inner_def) ; OK
		%test(%top_def) ; OK
		%test(%top_inner:top_def) ; NEVER
		%test(%top_inner:deeper_def) ; NEVER
		%*a
		%test(%deep_def) ; SECOND
		%test(%deeper:deep_def) ; NEVER
		%test(%deeper:deeper_def) ; SECOND
		%test(%top_inner:deep:deeper:deeper_def) ; OK
		%*b
		%test(%top_inner:deep:deep_def) ; OK
		%test(%top_inner:deep:top_inner:top_inner_def) ; NEVER
		%*c
		%test(%same_scope_def) ; OK
		%test(%local_inner) ; SECOND
		%test(%local_inner_def) ; SECOND
		%test(%local_inner:local_inner_def) ; OK
		%*d
		%test(%top_top_def) ; NEVER
		%test(%local_inner:top_top_def) ; NEVER
		%test(%undefd:undefd_def) ; SECOND
	}
	%**scope_sep
	%scope_test()
	%using local_inner
	%using deep ; NO
	%using top_inner:deep
}

%**scope_sep
%define local_inner 33
%namespace undefd {
	%define undefd_def 6
}
%namespace second_test {
	%using top_inner ; NOTE these %using shouldn't influence the test, because they're hidden in second_test
	%using test_space:local_inner
	%test_space:scope_test()	
}

%**using_test
%namespace using_test {
	%using top_top
	%using deep ; NO
	%using top_inner:deep
	%using deeper
	%test(%deeper_def)
	%test(%local_inner_def) ; NO
	%*a
	%using local_inner ; NO
	%using test_space
	%test(%local_inner_def) ; NO
	%using local_inner ; OK
	%test(%local_inner_def) ; OK
	
	%using test_space:namespace_inline_test:top_inner ; NO
}

%**reuse_test
%namespace reuse_test {
	%using top_inner:deep
	%using top_inner
	%using top_inner ; NO
	%using deep ; NO
	%using deeper
	%using top_inner:deep:deeper ; NO
}
